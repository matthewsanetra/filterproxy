worker_processes auto;
worker_rlimit_nofile 65535;

events {
    multi_accept on;
    worker_connections 65535;
}

http {
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;
	client_max_body_size 16M;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    server {
        listen 80;
        listen [::]:80;

        server_name 127.0.0.1;
        root /usr/share/nginx/static;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        location ~* \.(?:css(\.map)?|js(\.map)?|jpe?g|png|gif|ico|cur|heic|webp|tiff?|mp3|m4a|aac|ogg|midi?|wav|mp4|mov|webm|mpe?g|avi|ogv|flv|wmv)$ {
            expires 7d;
            access_log off;
        }

        location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
            add_header Access-Control-Allow-Origin "*";
            expires 7d;
            access_log off;
        }

        location /proxy {
            proxy_pass http://proxy:8080;
            proxy_http_version	1.1;
            proxy_cache_bypass	$http_upgrade;

            proxy_set_header Upgrade			$http_upgrade;
            proxy_set_header Connection 		"upgrade";
            proxy_set_header Host				$host;
            proxy_set_header X-Real-IP			$remote_addr;
            proxy_set_header X-Forwarded-For	$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto	$scheme;
            proxy_set_header X-Forwarded-Host	$host;
            proxy_set_header X-Forwarded-Port	$server_port;
        }
    }

    # TODO: REDIRECT SUBDOMAINS WHEN WE ARE USING ACTUAL DOMAIN FROM ENV
    # server {
    #     listen 80;
    #     listen [::]:80;

    #     server_name *.domain;
        
    #     return 301 http://domain$request_uri;
    # }
}